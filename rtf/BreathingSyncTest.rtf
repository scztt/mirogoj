{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf440
{\fonttbl\f0\fnil\fcharset77 LucidaSans;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 Server\cf0 .default = s = \cf2 Server\cf0 .internal.reboot;\
\
(\
v = \cf2 VirtualSpeakerArray\cf0 .newFromFile(s);\
v.listenerPos = 200@400;\
v.listenerAngle = 0.25;\
v.play;\
\
\cf3 // Here are the speaker clusters, in a nice dictionary\cf0 \
v.groupings.keys.postln;\
\
n = \cf2 BreathArray\cf0 (s).addNodesFromGroupings( v.groupings );\
n.play;\
\
\cf2 VirtualSpeakerArrayUI\cf0 ( v );\
)\
\
\cf3 // Two white noise generators, going to the north-east and south-east clusters.\cf0 \
\cf3 // Notice n[\\cluster_name].kr as a shortcut for In.kr(...) to get the phasor for that cluster.\cf0 \
\cf3 // Also, n[\\cluster_name].bus as a shortcut to the bus # for the bus it's reading from.\cf0 \
(\
n[\cf4 \\north_east\cf0 ].freq = 0.3;\
n[\cf4 \\south_east\cf0 ].freq = 0.2;\
w = \{ \
	\cf2 WhiteNoise\cf0 .ar( (n[\cf4 \\north_east\cf0 ].kr*pi).sin ); \
\}.play( outbus: n[\cf4 \\north_east\cf0 ].bus, addAction:\cf4 \\addBefore\cf0  );\
x = \{ \
	\cf2 WhiteNoise\cf0 .ar( (n[\cf4 \\south_east\cf0 ].kr*pi).sin ); \
\}.play( outbus: n[\cf4 \\south_east\cf0 ].bus, addAction:\cf4 \\addBefore\cf0  );\
)\
);\
\
\cf3 // try different values\cf0 \
n.sync = 0;\
n.sync = 0.5;\
n.sync = 1;\
\
\cf3 // Check the node order;\cf0 \
s.queryAllNodes;}