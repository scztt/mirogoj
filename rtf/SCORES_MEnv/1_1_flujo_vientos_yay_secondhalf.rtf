{\rtf1\ansi\ansicpg1252\cocoartf1038
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red96\green96\blue96;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs22 \cf2 MiroEnvironment\cf0 .get(\cf3 \\flujo1_viento_secondhalf\cf0 ).push;\
\
~init = \{\
\
	~data = \cf2 FileReader\cf0 .read(\cf4 "/Users/Shared/db_polje_1_25_ageASC_Age_Cipher_gen03"\cf0 .standardizePath, \cf2 true\cf0 , \cf2 true\cf0 , delimiter: $|); \cf5 // 134 nombres\cf0 \
	\
	~data.size.do(\{ \cf2 |i|\cf0 \
		\cf2 var\cf0  name, temp, finalname;\
		finalname=[];\
		name = ~data[i][1].split($ );\
		temp=\cf4 ""\cf0 ;\
		(name[0].size-3).do(\{ \cf2 |i|\cf0  temp=temp++name[0][i+3] \});\
		name[0] = temp;\
		block\{ \cf2 |break|\cf0 \
			name.do(\{ \cf2 |me|\cf0  ( me.asFloat > 0 ).if(\
					\{ finalname = finalname.add(me.asFloat) \},\
					\{ break.value() \})\
				\});\
			\};\
		~data[i] = [~data[i][0].asFloat, finalname];\
		\});\
		\
		\cf5 // second data set\cf0 \
	~data2 = \cf2 FileReader\cf0 .read(\cf4 "/Users/Shared/db_polje_25_166_ageASC_Age_Cipher_gen03"\cf0 .standardizePath, \cf2 true\cf0 , \cf2 true\cf0 , delimiter: $|);\
	\
	~data2.size.do(\{ \cf2 |i|\cf0 \
		\cf2 var\cf0  name, temp, finalname;\
		finalname=[];\
		name = ~data2[i][1].split($ );\
		temp=\cf4 ""\cf0 ;\
		(name[0].size-3).do(\{ \cf2 |i|\cf0  temp=temp++name[0][i+3] \});\
		name[0] = temp;\
		block\{ \cf2 |break|\cf0 \
			name.do(\{ \cf2 |me|\cf0  ( me.asFloat > 0 ).if(\
					\{ finalname = finalname.add(me.asFloat) \},\
					\{ break.value() \})\
				\});\
			\};\
		~data2[i] = [~data2[i][0].asFloat, finalname];\
		\});\
	\
		\cf5 // third data set\cf0 \
	~data3 = \cf2 FileReader\cf0 .read(\cf4 "/Users/Shared/db_allMirogoj_ageASC_ww1"\cf0 .standardizePath, \cf2 true\cf0 , \cf2 true\cf0 , delimiter: $|); \cf5 // 130 nombres\cf0 \
	\
	~data3.size.do(\{ \cf2 |i|\cf0 \
		\cf2 var\cf0  name, temp, finalname;\
		finalname=[];\
		name = ~data3[i][1].split($ );\
		temp=\cf4 ""\cf0 ;\
		(name[0].size-3).do(\{ \cf2 |i|\cf0  temp=temp++name[0][i+3] \});\
		name[0] = temp;\
		block\{ \cf2 |break|\cf0 \
			name.do(\{ \cf2 |me|\cf0  ( me.asFloat > 0 ).if(\
					\{ finalname = finalname.add(me.asFloat) \},\
					\{ break.value() \})\
				\});\
			\};\
		~data3[i] = [~data3[i][0].asFloat, finalname];\
		\});\
	\
		\cf4 "WIND INITIALIZED - FLUX 1"\cf0 .postln;\
\};\
\
~prepare = \{\
\
 	~prepClock = \cf2 TempoClock\cf0 .new;\
 	~prepTask = \{		\
		\cf2 Task\cf0 (\{	\
			~busses = [\
				\cf2 Bus\cf0 .alloc(\cf3 \\audio\cf0 , numChannels:1), \
				\cf2 Bus\cf0 .alloc(\cf3 \\audio\cf0 , numChannels:1),\
				\cf2 Bus\cf0 .alloc(\cf3 \\audio\cf0 , numChannels:1)\
				]; \
			\
			\cf5 ////	ADD SNAPSHOTS	//////\cf0 \
			~shot = \cf2 AtsSnapShot\cf0 .new(\cf4 "/Users/Shared/aaah2.ats"\cf0 , 0.25, 5, -30.dbamp);\
			~shot1 = \cf2 AtsSnapShot\cf0 .new(\cf4 "/Users/Shared/tza.ats"\cf0 , 0.15, 5, -30.dbamp);\
			~shot2 = \cf2 AtsSnapShot\cf0 .new(\cf4 "/Users/Shared/shuma2.ats"\cf0 ,0.75, 5, -60.dbamp);\
			~shot3 = \cf2 AtsSnapShot\cf0 .new(\cf4 "/Users/Shared/zee.ats"\cf0 , 0.25, 5, -30.dbamp);\
			~shot4 = \cf2 AtsSnapShot\cf0 .new(\cf4 "/Users/Shared/mno.ats"\cf0 , 0.25, 5, -30.dbamp);\
			~shot5 = \cf2 AtsSnapShot\cf0 .new(\cf4 "/Users/Shared/mmm.ats"\cf0 , 0.5, 5, -30.dbamp);\
			~shot6 = \cf2 AtsSnapShot\cf0 .new(\cf4 "/Users/Shared/tzaFrase.ats"\cf0 , 0.75, 5, -30.dbamp);\
			~shot7 = \cf2 AtsSnapShot\cf0 .new(\cf4 "/Users/Shared/lii.ats"\cf0 , 0.25, 7, -30.dbamp);\
\
			0.2.wait;\
			\
			\cf5 ////	CONFIRM BUSSES, DATAS	//////\cf0 \
			~winds = [	\cf2 Wind\cf0 .new(s, ~busses[0].bus, ~data), \
						\cf2 Wind\cf0 .new(s, ~busses[1].bus, ~data2), \
						\cf2 Wind\cf0 .new(s, ~busses[2].bus, ~data3)];\
			0.3.wait;\
			\
			\cf5 ////	ADD VOICES, CONFIRM BUSSES, DATAS //////\cf0 \
			~voices = [	\cf2 Voice\cf0 .new(s, ~winds[1], ~busses[1].bus, ~shot,  16.dbamp, 0.01, 2.5, 3), \
						\cf2 Voice\cf0 .new(s, ~winds[2], ~busses[2].bus, ~shot1,  16.dbamp, 0.01, 2.5, 3)];\
			\
			~pans = ~busses.collect(\{ \cf2 |bus|\cf0  \cf2 ElementPanner\cf0 .new(bus.bus) \});\
			0.3.wait;\
			\
			~windsScore = [\
				[	\cf5 // 	WIND 1\cf0 \
					[ 1,	\{	\cf4 "starting"\cf0 .postln; \}],\
					[ 1,	\{	~pans[0].updateState( 20, \cf3 \\rect\cf0 , \{ [0,0,0,0] \} ) \} ], \
					[ 1,	\{	~winds[0].updateState( 1, 15, 900, 10000, 20 ) \}],\
					[ 10,	\{	~pans[0].updateState( 1, \cf3 \\rect\cf0 , \{ [ 1, 0.5, \cf2 LFNoise2\cf0 .kr(0.2, 0.75, 0.25, 0.25), 0.7 ] \} ) \}],\cf5 // centered north & south rand lento\cf0 \
			\cf5 //		[ 10,	\{	~winds[0].gustWeights_( [0.1, 0.1, 0.1, 0.1, 0.1, 0.5] ) \}], // 'U'\cf0 \
					[ 60,	\{	~winds[0].wait_(10) \} ],\
					[ 90,	\{	~winds[0].wait_(5) \} ],\
					[ 135,	\{	~winds[0].updateState( 60, 100, 900, 10000, 5 ) \}],\
					[ 200,	\{	~winds[0].amp_(-21.dbamp) \}],\
					[ 200,	\{	~winds[0].updateState( 30, 5000, 100, 5000, 5 ) \}],\
					[ 200,	\{	~winds[0].gustWeights_( [0.1, 0.1, 0.5, 0.1, 0.1, 0.1] ) \}], \cf5 // swell\cf0 \
					[ 260,	\{	~winds[0].gustWeights_( [0.5, 0.1, 0.1, 0.1, 0.1, 0.1] ) \}], \cf5 // perc\cf0 \
					[ 385,	\{	~winds[0].updateState( 25, 5000, 80, 750, 20 ); ~winds[0].amp_(-6.dbamp) \}],\
\cf5 //					[ 385,	\{	~winds[0].amp_(-6.dbamp) \}],\cf0 \
					[ 400,	\{	~winds[0].gustWeights_( [0.3, 0.1, 0.1, 0.3, 0.1, 0.1] ) \}],\
			\cf5 //		[ 520,	\{	~winds[0].updateState( 5, 15, 150, 3500, 10 ) \}],\cf0 \
					[ 740,	\{	~pans[0].updateState( 1, \cf3 \\rect\cf0 , \{ [ 1, 0.5, \cf2 LFNoise2\cf0 .kr(0.2, 0.75, 0.25, 0.25), 0.7 ] \} ) \}],\cf5 // centered north & south rand lento\cf0 \
					[ 741,	\{	~winds[0].updateState( 60, 6000, 80, 3750, 20 ) \}], \
					[ 742,	\{	~winds[0].gustWeights_( [0.1, 0.1, 0.5, 0.1, 0.1, 0.1] ) \}],\
					[ 743,	\{	~winds[0].amp_(-21.dbamp) \}],\
					[ 760,	\{	~winds[0].wait_(10) \}], \
					[ 1200,	\{	~winds[0].updateState( 10, 15, 150, 3500, 15 ) \}],\
					\cf5 //	stop wind \cf0 \
					[ 1380,	\{	~winds[0].free \} ],\
					[ 1600, \{	~\cf2 this\cf0 .cleanup() \}]\
				],\
				[	\cf5 // 	WIND 2\cf0 \
					[ 5,	\{	~winds[1].updateState( 1, 10, 12000, 19000, 20 ) \}],\
			\cf5 //		[ 10,	\{	~pans[1].updateBehavior( 1, \\marching, (\\freq:1.5) ) \}], // marching\cf0 \
					[ 10,	\{	~pans[1].updateBehavior( 1, \cf3 \\marching\cf0 , (\cf3 \\freq\cf0 :0.01, \cf3 \\spread\cf0 : 0.7) ) \}], \cf5 // perimeter rand windshield muy lento\cf0 \
					[ 60,	\{	~winds[1].wait_(10) \} ],\
					[ 90,	\{	~winds[1].wait_(5) \}],\
					[ 120,	\{	~winds[1].updateState( 30, 200, 8000, 19000, 10 ) \}],\
					[ 180,	\{	~winds[1].updateState( 20, 3000, 2500, 15000, 2 ) \}],\
					[ 280,	\{	~winds[1].gustWeights_( [0.5, 0.1, 0.1, 0.1, 0.1, 0.1] ) \}],\
					[ 385,	\{	~winds[1].updateState( 15, 10, 2500, 10000, 10 ) \}],\
					[ 408,	\{	~winds[1].gustWeights_( [0.1, 0.1, 0.1, 0.5, 0.1, 0.1] ) \}], \
					[ 415,	\{	~winds[1].updateState( 15, 300, 100, 5000, 5 ) \}],\
					[ 420,	\{	~pans[1].updateBehavior( 35, \cf3 \\marching\cf0 , (\cf3 \\freq\cf0 : 1.75, \cf3 \\spread\cf0 : 0.5) ) \}], \cf5 // MARCHING\cf0 \
					[ 740,	\{	~pans[1].updateBehavior( 1, \cf3 \\marching\cf0 , (\cf3 \\freq\cf0 :0.1, \cf3 \\spread\cf0 : 0.7) ); ~winds[1].updateState( 55, 2500, 100, 3000, 15 ) \}], \cf5 // perimeter rand windshield muy lento\cf0 \
					[ 882,	\{	\cf4 "Start Voices in wind 2"\cf0 .postln \}],\
					[ 885,	\{	~winds[1].updateState( 5, 2500, 100, 3000, 10 ); ~voices[0].play(5) \}],\
					[ 885,	\{	~voices[0].play(5) \} ], \cf5 // this voice gets this element\cf0 \
					[ 890,	\{	~winds[0].gustWeights_( [0.1, 0.1, 0.5, 0.1, 0.1, 0.1] ) \}], \cf5 // swell\cf0 \
					[ 900, 	\{	~voices[0].bw_(0.01, argamp: -12.dbamp, lag: 8, curve: 2) \} ], \cf5 // aaah2\cf0 \
					[ 920, 	\{	~voices[0].transform(~shot3, 200, -6.dbamp, 0.005, 15, 2) \} ], \cf5 // zee\cf0 \
					[ 955, 	\{	~voices[0].transform(~shot, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // aaah2\cf0 \
					[ 1000, \{	~voices[0].transform(~shot3, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // zee\cf0 \
					[ 1040, \{	~voices[0].transform(~shot5, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // mmm\cf0 \
					[ 1100, \{	~voices[0].transform(~shot3, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // zee\cf0 \
					[ 1145, \{	~voices[0].transform(~shot, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // aaah2\cf0 \
					[ 1170, \{	~voices[0].transform(~shot5, 200, -6.dbamp, 0.005, 15, 2) \} ], \cf5 // mmm\cf0 \
					[ 1190, \{	~voices[0].bw_(1.0, argamp: -12.dbamp, lag: 30, curve: 2) \} ], \cf5 // aaah2\cf0 \
					[ 1230,	\{	~winds[1].updateState( 10, 10, 2500, 10000, 5 ) \}],\
					[ 1240, \{	~voices[0].free	\}],\
					[ 1380,	\{	~winds[1].free \} ]				],\
				[	\cf5 // 	WIND 3\cf0 \
			\cf5 //		[ 4,	\{	~pans[2].updateState( 20, \\rect, \{ [ 1, 0.5, SinOsc.kr(10,0,0.5,0.5), 0 ] \} ) \}],\cf0 \
						\cf5 // se expande y contrae al norte y al sur desde el cristo regular\cf0 \
					[ 4,	\{	~pans[2].updateState( 2, \cf3 \\perim\cf0 , \{ [ 1, 0.5, \cf2 SinOsc\cf0 .kr(0.1,0.5,0.3) ] \} ) \}],\
					[ 4,	\{	~winds[2].updateState( 5, 10, 100, 1000, 30 ) \}],\
					[ 10,	\{	~winds[2].upperPartial_(1000) \}],\
					[ 75,	\{	~winds[2].upperPartial_(1700) \}],\
					[ 175,	\{	~winds[2].updateState( 35, 1000, 250, 3500, 15 ) \}],					[ 300,	\{	~winds[2].gustWeights_( [0.1, 0.1, 0.3, 0.3, 0.1, 0.1] ) \}],\
					[ 385,	\{	~winds[2].updateState( 35, 10, 500, 3000, 10 ) \}],\
			\cf5 //		[ 385,	\{	~pans[1].updateBehavior( 35, \\marching, (\\freq: 1.5, \\spread: 0.5) ) \}], // MARCHING\cf0 \
					[ 520,	\{	~winds[2].updateState( 35, 50, 250, 1200, 15 ) \}],\
					[ 520,	\{	~pans[2].updateState( 60, \cf3 \\perim\cf0 , [1,0.2,1] ) \}], \cf5 // half perimeter north\cf0 \
					[ 750, 	\{	~pans[2].updateState( 60, \cf3 \\perim\cf0 , [1,0.8,1] ) \}], \cf5 // half perimeter south\cf0 \
					[ 750,	\{	~winds[2].updateState( 45, 1250, 100, 1200, 15 ) \}],\
					[ 880,	\{	\cf4 "Start Voices in wind 3"\cf0 .postln \}],\
					[ 885,	\{	~voices[1].play(5) \} ], \cf5 // this voice gets this element\cf0 \
					[ 900,	\{	~winds[2].gustWeights_( [0.1, 0.1, 0.5, 0.1, 0.1, 0.1] ); ~pans[2].updateState( 40, \cf3 \\perim\cf0 , [1,0.2,1] ) \}],\
\cf5 //					[ 900,	\{	~pans[2].updateState( 40, \\perim, [1,0.2,1] ) \}], // half perimeter NORTH\cf0 \
					[ 910,	\{	~winds[2].updateState( 40, 5000, 100, 5000, 5 ); ~voices[1].bw_(0.01, argamp: -12.dbamp, lag: 8, curve: 2) \}],\
\cf5 //					[ 920, 	\{	~voices[1].bw_(0.01, argamp: -12.dbamp, lag: 8, curve: 2) \} ], // aaah2\cf0 \
					[ 930, 	\{	~voices[1].transform(~shot1, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // tza\cf0 \
					[ 1000, \{	~voices[1].transform(~shot2, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // shuma2\cf0 \
					[ 1050, \{	~voices[1].transform(~shot4, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // zee\cf0 \
					[ 1040, \{	~voices[1].transform(~shot2, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // shuma2\cf0 \
					[ 1100, \{	~voices[1].transform(~shot1, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // tza\cf0 \
					[ 1145, \{	~voices[1].transform(~shot4, 200, -6.dbamp, 0.005, 10, 2) \} ], \cf5 // aaah2\cf0 \
					[ 1170, \{	~voices[1].transform(~shot2, 200, -6.dbamp, 0.005, 5, 2) \} ], \cf5 // shuma2\cf0 \
					[ 1190, \{	~voices[1].bw_(1.0, argamp: -12.dbamp, lag: 30, curve: 2) \} ], \cf5 // shuma2\cf0 \
					[ 1050,	\{	~pans[2].updateState( 40, \cf3 \\perim\cf0 , [1,0.8,1] ) \}], \cf5 // half perimeter south\cf0 \
					[ 1100, \{	~voices[1].free	\}],\
					[ 1150, \{	~\cf2 this\cf0 .prepareNext() \}],\
					[ 1230,	\{	~winds[2].updateState( 10, 10, 100, 1000, 10 ) \}],\
					[ 1470, \{ 	~\cf2 this\cf0 .playNext() \}],\
					[ 1560,	\{	~winds[2].free \} ],\
				]\
						\
			];\
			~finishedFlag = \cf2 false\cf0 ; \
			\cf5 ////	MAKE SURE NUMBER OF COLLECTED SCORES CORRESPONDS TO THE NUMBER OF WINDS //////\cf0 \
			~windTasks = 3.collect(\{ \cf2 | windIndex |\cf0 \
				\cf2 var\cf0  thisClock;\
				thisClock = \cf2 TempoClock\cf0 .new;\
					\cf2 Task\cf0 (\{ \cf2 |starttime|\cf0 \
						\cf2 var\cf0  update, srcdex, now, offset, finished;\
						update = 2; \cf5 // update time for the task to check the score\cf0 \
						srcdex = 0;\
						now = 0.0;\
						offset = 739;\
						finished = \cf2 false\cf0 ;\
						\cf4 "checking wind "\cf0 .post; windIndex.post; \cf4 "'s "\cf0 .post; ~windsScore[ windIndex ].size.post; \
							\cf4 " breakpoints for offest"\cf0 .postln;\
						~windsScore[ windIndex ].size.do(\{ \cf2 | i |\cf0 \
							(offset > ~windsScore[windIndex][i][0]).if(\{ srcdex = srcdex + 1 \});\
						\});\
						\cf4 "wind "\cf0 .post; windIndex.post; \cf4 " is starting at breakpoint "\cf0 .post; srcdex.postln;\
\
						~winds[ windIndex ].play;\
						0.5.wait;\
						block(\{ \cf2 | break |\cf0 \
							\cf2 inf\cf0 .do(\{\
								\cf2 | i |\cf0  \
								\cf2 var\cf0  state;\
								now = \cf2 thisThread\cf0 .beats - starttime + offset;\
								finished.not.if(\{\
									(now > ~windsScore[ windIndex ][srcdex][0]).if(\{\
											state = ~windsScore[ windIndex ][srcdex][1];\
											s.latency.postln;\
											state.def.sourceCode.postln;\
											try \{ s.makeBundle(s.latency, state) \};\
											srcdex = srcdex + 1;\
											\cf4 "score "\cf0 .post; windIndex.post; \cf4 " advancing to "\cf0 .post; srcdex.postln;\
											(srcdex == ~windsScore[ windIndex ].size).if(\{\
												finished = \cf2 true\cf0 ;\
												~finishedFlag = \cf2 true\cf0 ;\
												\cf4 "this wind's score is FINISHED: "\cf0 .post; windIndex.postln;\
												break.value();\
											\});\
										\});\
									\});\
								update.wait;\
							\});\
						\});	\
					\}, thisClock);\
			\})
\fs24 ;
\fs22  \
			4.wait;			\
			\cf4 "prepare complete for FLUX 1 - WINDS"\cf0 .postln;\
		\}, ~prepClock);\
	\};\
	~prepTask.value.play;	\
	\cf4 "WIND PREPARED - FLUX 1"\cf0 .postln;\
\};\
\
~play = \{\
\
	~pans.do( \cf2 _\cf0 .play );\
	~windTasks.do( \cf2 _\cf0 .play );\
	//~windTasks[0].play;\
\
	\cf4 "WIND PLAYING - FLUX 1"\cf0 .postln;\
\
\};\
\
~free = \{\
\
	~busses.do(\cf2 _\cf0 .free);\
	~pans.do(\cf2 _\cf0 .free);\
	~prepClock.clear;\
	~windTasks.do(\{ \cf2 | task |\cf0  task.stop.reset; task.clock.clear\});\
	~finishedFlag.not.if(\{\
		\cf4 "finished early"\cf0 .postln;		\
		~winds.do(\{ \cf2 |wind|\cf0  wind.killNow \});\
		~voices.do(\{ \cf2 |voice|\cf0  voice.killNow \});\
	\});\
	~busses = ~winds = ~voices = ~shot = ~shot1 = ~pans = ~prepTask = ~prepClock = ~windTasks = ~windsScore = ~finishedFlag = \cf2 nil\cf0 ;\
	\
	\cf4 "WIND FREEING - FLUX 1"\cf0 .postln;\
	\
\};\
\
\cf2 MiroEnvironment\cf0 .get(\cf3 \\flujo1_viento\cf0 ).pop;\
\cf5 //MiroEnvironment.gui}