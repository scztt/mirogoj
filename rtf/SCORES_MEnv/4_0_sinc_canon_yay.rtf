{\rtf1\ansi\ansicpg1252\cocoartf1038
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs22 \cf2 //// TO BE COMPLETE, NICO NEEDS TO BOUNCE THE SOUNDFILES\cf0 \
\
\cf3 MiroEnvironment\cf0 .get(\cf4 \\sinc4_canon\cf0 ).push;\
\
~init = \{\
\
	~vg = \cf3 VirtualSpeakerArray\cf0 .get.groupings;\
	~leftChannels = [\
		~vg[0].atAll([0,2]),\
		~vg[1].atAll([0,2]),\
		~vg[2].atAll([0,2]),\
	\
		~vg[3].atAll([0]),\
		~vg[4].atAll([0,2]),\
		~vg[5].atAll([0]),\
		\
		~vg[6].atAll([0,2]),\
		~vg[7].atAll([0,2]),\
		~vg[8].atAll([0]),\
		\
		~vg[9].atAll([0,2]),\
		~vg[10].atAll([0,2]),\
		~vg[11].atAll([0,2])\
	];\
	\
	~rightChannels = [\
		~vg[0].atAll([1,3]),\
		~vg[1].atAll([1,3]),\
		~vg[2].atAll([1,3]),\
		\
		~vg[3].atAll([1,2]),\
		~vg[4].atAll([1,3]),\
		~vg[5].atAll([0]),\
		\
		~vg[6].atAll([1]),\
		~vg[7].atAll([1,3]),\
		~vg[8].atAll([0]),\
		\
		~vg[9].atAll([1,3]),\
		~vg[10].atAll([1,3]),\
		~vg[11].atAll([1,3])\
	];\
	\
	~rightChannels = ~rightChannels.collect( \cf3 _\cf0 .collect( \cf3 _\cf0 .busNum ) );\
	~leftChannels = ~leftChannels.collect( \cf3 _\cf0 .collect( \cf3 _\cf0 .busNum ) );\
\
	\cf3 SynthDef\cf0 ( \cf4 \\Stereo12ChanPlayer\cf0 , \{\
		\cf3 | amp, dur=20 |\cf0 \
		\cf3 var\cf0  env, envGen, buffers, signals;	\
		buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!12 );\
		env = \cf3 Control\cf0 .names([\cf4 \\env\cf0 ]).kr( \cf3 Env\cf0 (1!12, [1]++(0!10)) );\
		envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:dur, levelScale:amp, doneAction:2 );\
		signals = V\cf3 DiskIn\cf0 .ar( 2, buffers, BufRateScale.kr(buffers), 0 ) * envGen;\
		signals[5] = signals[5]*0.5;\
		signals[8] = signals[8]*0.5;\
		signals.do(\{\
			\cf3 |sig, i|\cf0 \
			\cf3 Out\cf0 .ar( ~rightChannels[i], sig[0] );\
			\cf3 Out\cf0 .ar( ~leftChannels[i], sig[1] );\
		\});\
	\}).send(s).store;\
\
	\cf5 "SYNCHRONY INITIALIZED - CANON"\cf0 .postln;\
\};\
\
~prepare = \{\
	~buffers = [\
			\cf3 Buffer\cf0 .cueSoundFile(s,\cf5 "/Users/Shared/sincronia_4_cannon_cluster_01.aif"\cf0  , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_02.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_03.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_04.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_05.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_06.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_07.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_08.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_08.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_09.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_10.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_11.aif"\cf0 , 0, 2),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/sincronia_4_cannon_cluster_12.aif"\cf0 , 0, 2)\
		];\
			\
	~playClock = \cf3 TempoClock\cf0 .new;\
	~playTask = \
		\cf3 Task\cf0 (\{ \cf3 |starttime|\cf0 \
			\cf3 var\cf0  totalDur;\
			totalDur = (4.5*60)+6;\
\
			\cf2 // bump by 6dB\cf0 \
			~synth = \cf3 Synth\cf0 ( \cf4 \\Stereo12ChanPlayer\cf0 ,args:[ \cf4 \\amp\cf0 , -30.dbamp, \cf4 \\dur\cf0 , 4.5*60, \cf4 \\buffers\cf0 , ~buffers.collect(\{ \cf3 |buf|\cf0  buf.bufnum \}) ], 	target:\cf3 GroupManager\cf0 .get.synths );\
\
			2.wait;\
			~prepped = \cf3 false\cf0 ;\
			block(\{ \cf3 |break|\cf0 \
				\cf3 inf\cf0 .do(\{\
					\cf3 var\cf0  now;\
					now = \cf3 thisThread\cf0 .beats - starttime;\
					\
					(now > (totalDur-60) && ~prepped.not ).if(\{\
						~\cf3 this\cf0 .prepareNext(); ~prepped=\cf3 true\cf0 ;\
					\});\
\
					(now > totalDur).if(\{\
						\cf5 "SYNCHRONY ENDING - CANON"\cf0 .postln;\
						~\cf3 this\cf0 .playNext();\
						~\cf3 this\cf0 .cleanup();\
						break.value();\
						\});\
					5.wait;\
				\});\
			\});\
		\}, ~playClock);\
\
	\cf5 "SYNCHRONY PREPARED - CANON"\cf0 .postln;\
\};\
\
~play = \{\
\
	~playTask.play;\
	\cf5 "SYNCHRONY PLAYING - CANON"\cf0 .postln;\
\
\};\
\
~free = \{\
\
	~synth.free;\
	~playClock.clear;\
	~playTask.stop.reset;\
	~buffers.do(\{ \cf3 |buf|\cf0  buf.close \});\
	~buffers.do(\{ \cf3 |buf|\cf0  buf.free \});\
	~buffers = ~playTask = ~playClock = ~synth = \cf3 nil\cf0 ;\
	\cf5 "SYNCHRONY FREEING - CANON"\cf0 .postln;\
\
\};\
\
\cf3 MiroEnvironment\cf0 .get(\cf4 \\sinc4_canon\cf0 ).pop;\
\cf2 //MiroEnvironment.gui;}