{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs22 \cf2 ///// VOICES NEED TO BE ADDED!!! ////////\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 MiroEnvironment\cf0 .get(\cf4 \\flujo3_agua\cf0 ).push;\
\
~init = \{\
\
	~data = \cf3 FileReader\cf0 .read(\cf5 "/Users/Shared/db_allMirogoj_dodDESC_ww1"\cf0 .standardizePath, \cf3 true\cf0 , \cf3 true\cf0 , delimiter: $|);\
	\
	~data.size.do(\{ \cf3 |i|\cf0 \
		\cf3 var\cf0  name, temp, finalname;\
		finalname=[];\
		name = ~data[i][1].split($ );\
		temp=\cf5 ""\cf0 ;\
		(name[0].size-3).do(\{ \cf3 |i|\cf0  temp=temp++name[0][i+3] \});\
		name[0] = temp;\
		block\{ \cf3 |break|\cf0 \
			name.do(\{ \cf3 |me|\cf0  ( me.asFloat > 0 ).if(\
					\{ finalname = finalname.add(me.asFloat) \},\
					\{ break.value() \})\
				\});\
			\};\
		~data[i] = [~data[i][0].asFloat, finalname];\
		\});\
		\
		\cf2 // second data set\cf0 \
	~data2 = \cf3 FileReader\cf0 .read(\cf5 "/Users/Shared/db_allMirogoj_dodDESC_ww2"\cf0 .standardizePath, \cf3 true\cf0 , \cf3 true\cf0 , delimiter: $|);\
	\
	~data2.size.do(\{ \cf3 |i|\cf0 \
		\cf3 var\cf0  name, temp, finalname;\
		finalname=[];\
		name = ~data2[i][1].split($ );\
		temp=\cf5 ""\cf0 ;\
		(name[0].size-3).do(\{ \cf3 |i|\cf0  temp=temp++name[0][i+3] \});\
		name[0] = temp;\
		block\{ \cf3 |break|\cf0 \
			name.do(\{ \cf3 |me|\cf0  ( me.asFloat > 0 ).if(\
					\{ finalname = finalname.add(me.asFloat) \},\
					\{ break.value() \})\
				\});\
			\};\
		~data2[i] = [~data2[i][0].asFloat, finalname];\
		\});\
\
	\cf5 "INITIATED FLUX 3 - WATER"\cf0 .postln;\
\
\};\
\
~prepare = \{\
\
 	~prepClock = \cf3 TempoClock\cf0 .new;\
 	~prepTask = \{		\
		\cf3 Task\cf0 (\{	\
			~busses = [\
				\cf3 Bus\cf0 .alloc(\cf4 \\audio\cf0 , numChannels:1), \
				\cf3 Bus\cf0 .alloc(\cf4 \\audio\cf0 , numChannels:1)\
				]; \
			\
			\cf2 ////	ADD SNAPSHOTS	//////\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //			~shot = AtsSnapShot.new("/Users/Shared/zee.ats", 0.5, 5, -25.dbamp);\cf0 \
\cf2 //			~shot1 = AtsSnapShot.new("/Users/Shared/zee.ats", 0.5, 5, -25.dbamp);\cf0 \
\cf2 //			0.2.wait;\cf0 \
			\
			\cf2 ////	CONFIRM BUSSES, DATAS	//////\cf0 \
			~waters = [	\cf3 Water\cf0 .new(s, ~busses[0].bus, ~data), \
						\cf3 Water\cf0 .new(s, ~busses[1].bus, ~data2)];\
			0.3.wait;\
			\
\cf2 //			////	ADD VOICES, CONFIRM BUSSES, SHOTS //////\cf0 \
\cf2 //			~voices = [	Voice.new(s, ~waters[0], 0, ~shot,  16.dbamp, 0.01, 2.5, 3), \cf0 \
\cf2 //						Voice.new(s, ~waters[1], 0, ~shot2,  16.dbamp, 0.01, 2.5, 3)];\cf0 \
			\
			~pans = ~busses.collect(\{ \cf3 |bus|\cf0  \cf3 ElementPanner\cf0 .new(bus.bus) \});\
			0.3.wait;\
			\
			~watersScore = [\
				[ \cf2 // WATER 1\cf0 \
					[ 5,	\{	~waters[0].updateState( 15, 20, 3, 0.5, 0.1, 0.4, 1 ) \}],\
					[ 27,	\{	~waters[0].updateState( 7, 25, 3, 1, 0.8, 0.2, 1.7 ) \}],\
					[ 40,	\{	~waters[0].updateState( 15, 1, 5, 2, 0.01, 0.1, 5 ) \}],\
					[ 45,	\{	~pans[0].updateState( 20, \cf4 \\rect\cf0 , \{ [ 1.0, 0.5, \cf3 SinOsc\cf0 .kr(0.1,0,0.5,0.5), 0 ] \} ) \} ], \cf2 // windshield medium speed\cf0 \
					[ 59,	\{	~waters[0].updateState( 5, 25, 3, 1, 5.8, 0.7, 0.5) \}], \cf2 // feedback\cf0 \
					[ 85,	\{	~waters[0].updateState( 5, 250, 4.5, 1.1, 1.4, 0.45, 0.7 ) \}], \cf2 // machine\cf0 \
					[ 99,	\{	~waters[0].updateState( 15, 2000, 3, 0.5, 0.9, 0.4, 0.6 ) \}], \cf2 // dark low current\cf0 \
					[ 120,	\{	~pans[0].updateState( 20, \cf4 \\perim\cf0 , [1.0,0.1,0] ) \} ], \cf2 // Cluster 01 Extremo NorOeste\cf0 \
					[ 150,	\{	~pans[0].updateState( 20, \cf4 \\perim\cf0 , [1.0,0.5,0.1] ) \} ], \cf2 // Cristo\cf0 \
					[ 180,	\{	~pans[0].updateState( 20, \cf4 \\perim\cf0 , [1.0,1,1] ) \} ], \cf2 // Cluster 10 & 11\cf0 \
					[ 210,	\{	~pans[0].updateState( 15, \cf4 \\perim\cf0 , [1.0,0.5,1] ) \} ], \cf2 // Cluster 03, 05, 06, 08, 09, 12\cf0 \
					[ 210,	\{	~waters[0].updateState( 25, 1, 5, 2, 0.01, 0.1, 10 ) \} ], \cf2 // tingling scattered high\cf0 \
			\cf2 //		[ 250,	\{	~pans[0].updateBehavior( 15, \\circling, (\\freq:0.1, \\spread: 0.05 ) ) \} ], // circling\cf0 \
			\cf2 //		[ 250,	\{	~pans[0].updateBehavior( 15, \\medialunaSur, (\\freq:0.001, \\spread: 0.05 ) ) \} ], // circling\cf0 \
					[ 250,	\{	~pans[0].updateBehavior( 15, \cf4 \\marching\cf0 , (\cf4 \\freq\cf0 :0.001, \cf4 \\spread\cf0 : 0.05 ) ) \} ], \cf2 // circling\cf0 \
					[ 350,	\{	~pans[0].updateState( 15, \cf4 \\perim\cf0 , [1.0,1,1] ) \} ],\cf2 // Cluster 10 & 11\cf0 \
					[ 500,	\{	~waters[0].updateState( 60, 5, 7, 0.35, 0.5, 0.2, 1 ) \} ],\cf2 // water tubbing\cf0 \
					[ 520, 	\{	~pans[0].updateState( 45, \cf4 \\perim\cf0 , [1.0,0.1,0.5] ) \} ], \cf2 // Cluster 01 & 02\cf0 \
					[ 590,	\{	~waters[0].updateState( 10, 5, 10, 0.5, 0.5, 0.4, 1 ) \} ],\cf2 // water tubbing\cf0 \
					[ 670, 	\{	~pans[0].updateBehavior( 10, \cf4 \\marching\cf0 , (\cf4 \\freq\cf0 :0.005) ) \} ], \cf2 // perimeter windshield muy lento\cf0 \
					[ 670,	\{	~waters[0].updateState( 15, 25, 3, 1, 5.8, 0.7, 0.3) \}], \cf2 // feedback\cf0 \
					[ 696,	\{	~waters[0].updateState( 5, 250, 4.5, 1.1, 1.4, 0.45, 0.8 ) \}], \cf2 // machine\cf0 \
					[ 710,	\{	~waters[0].updateState( 15, 2000, 3, 0.5, 0.9, 0.4, 0.6 ) \}], \cf2 // dark low current\cf0 \
					[ 790,	\{	~pans[0].updateBehavior( 15, \cf4 \\leftAndRight_slow\cf0  ) \}], \cf2 //rect central left and right slow\cf0 \
					[ 790,	\{	~waters[0].updateState( 15, 25, 3, 1, 5.8, 0.7, 0.4) \}], \cf2 // feedback\cf0 \
					[ 839,	\{	~waters[0].updateState( 15, 250, 4.5, 1.1, 1.4, 0.45, 0.8 ) \}], \cf2 // machine\cf0 \
					[ 863,	\{	~waters[0].updateState( 15, 2000, 3, 0.5, 0.9, 0.4, 1.0 ) \}], \cf2 // dark low current\cf0 \
			\cf2 //		[ 863,	\{	~pans[0].updateBehavior( 10, \\leftAndRight_slow ) \}], //rect central left and right slow\cf0 \
					[ 900,	\{	~pans[0].updateState( 30, \cf4 \\rect\cf0 , \{ [ 1.0, 0.5, \cf3 SinOsc\cf0 .kr(\cf3 LFNoise2\cf0 .kr(1,1,6,0.25),0,0.5,0.5), 0 ] \} ) \}], \cf2 // granulated rand fast\cf0 \
					[ 900,	\{	~waters[0].updateState( 30, 2000, 3, 0.5, 0.9, 0.4, 1.0 ) \}], \cf2 // dark low current\cf0 \
					[ 930,	\{	~waters[0].updateState( 35, 25, 3, 1, 5.8, 0.7, 0.4) \}], \cf2 // feedback\cf0 \
					[ 950,	\{	~waters[0].updateState( 15, 250, 4.5, 1.1, 1.4, 0.45, 1 ) \}], \cf2 // machine\cf0 \
					[ 1000,	\{	~waters[0].updateState( 15, 1, 5, 2, 0.01, 0.1, 30 ) \}], \cf2 // sink?\cf0 \
					[ 1200,	\{	~waters[0].free; \} ]\
				],\
				[	\cf2 // 	WATER 2\cf0 \
					[ 5,	\{	~waters[1].updateState( 15, 5, 2, 1, 1.8, 0.2, 1 ) \}], \cf2 // gurgle\cf0 \
					[ 5,	\{	~pans[1].updateState( 10, \cf4 \\perim\cf0 , [0.5,0.5,3] ) \}], \cf2 // ALL the perimeter\cf0 \
					[ 25,	\{	~waters[1].updateState( 15, 250, 4.5, 1.1, 1.4, 0.45, 0.4 ) \}], \cf2 // machine\cf0 \
					[ 30,	\{	~pans[1].updateState( 20, \cf4 \\rect\cf0 , \{ [ 1.0, 0.5, \cf3 SinOsc\cf0 .kr(10,0,0.5,0.5), 0 ] \} ) \} ], \cf2 // granulated\cf0 \
					[ 40,	\{	~waters[1].updateState( 22, 1, 20, 0.35, 0.5, 0.1, 5 ) \} ], \cf2 // water dripping\cf0 \
			\cf2 //		[ 40,	\{	~waters[1].ampfluxrate_(15.reciprocal) \}],\cf0 \
					[ 75, 	\{	~pans[1].updateBehavior( 10, \cf4 \\marching\cf0 , (\cf4 \\freq\cf0 :0.005, spread: 0.75) ) \} ], \cf2 // perimeter windshield muy lento\cf0 \
					[ 90,	\{	~waters[1].updateState( 22, 1, 20, 0.35, 0.5, 0.1, 3 ) \} ], \cf2 // water dripping\cf0 \
					[ 200,  \{	~waters.[1].updateState( 25, 5, 5940, 0.2, 0.05, 0.45, 10) \} ], \cf2 // carrill\'f3n\cf0 \
					[ 210,	\{	~pans[1].updateState( 15, \cf4 \\perim\cf0 , [1.0,0.5,0.1] ) \}], \cf2 // Cristo\cf0 \
					[ 230,  \{	~waters.[1].updateState( 25, 5, 5940, 0.2, 0.05, 0.45, 15) \} ], \cf2 // carrill\'f3n\cf0 \
					[ 230,	\{	~pans[1].updateState( 10, \cf4 \\rect\cf0 , \{ [ 1, 0.5, \cf3 SinOsc\cf0 .kr(0.01,0,0.5,0.5), 0 ] \} ) \}], \cf2 // windshield North-South slow speed\cf0 \
					[ 450,	\{	~waters[1].updateState( 20, 5, 2500, 0.6, 0.2, 0.35, 8 ) \} ], \cf2 // pitchy gurgle\cf0 \
					[ 490, 	\{	~pans[1].updateState( 10, \cf4 \\perim\cf0 , [1.0,0.1,0.5] ) \} ], \cf2 // Cluster 01 & 02\cf0 \
					[ 520,	\{	~waters[1].updateState( 60, 20, 3, 0.5, 0.1, 0.4, 6 ) \} ], \cf2 // sink 1\cf0 \
					[ 520,	\{	~pans[1].updateState( 45, \cf4 \\perim\cf0 , [1.0,1,1] ) \} ],\cf2 // Cluster 10 & 11\cf0 \
					[ 675,	\{	~waters[1].updateState( 15, 250, 4.5, 1.1, 1.4, 0.45, 0.55 ) \}], \cf2 // machine\cf0 \
					[ 680, 	\{	~pans[1].updateState( 20, \cf4 \\rect\cf0 , \{ [ 1.0, 0.5, \cf3 LFNoise2\cf0 .kr(\cf3 LFNoise2\cf0 .kr(1,10,15,10),1,0.5,0.5), 0 ] \} ) \}], \cf2 // granulated super rand fast\cf0 \
					[ 770,  \{	~waters[1].updateState( 20, 7, 9.5, 1.1, 2.9, 0.9, 0.25 ) \}], \cf2 // fire with electronic buzz\cf0 \
					[ 770,	\{	~pans[1].updateState( 20, \cf4 \\perim\cf0 , [1,0.5,3] ) \}], \cf2 // ALL the perimeter\cf0 \
					[ 770,  \{	~waters[1].updateState( 20, 7, 9.5, 1.1, 2.9, 0.7, 0.1 ) \}], \cf2 // fire with electronic buzz\cf0 \
					[ 830,  \{	~waters[1].updateState( 20, 7, 9.5, 1.1, 2.9, 0.3, 3 ) \}], \cf2 // fire with electronic buzz\cf0 \
					[ 830,	\{	~pans[1].updateBehavior( 30, \cf4 \\jittery3\cf0 , (\cf4 \\speed\cf0 : 3, \cf4 \\freq\cf0 :0.05, \cf4 \\amount\cf0 : 0.35, \cf4 \\spread\cf0 : 0.8, \cf4 \\pos\cf0 : 0.8) ) \}],\cf2 // rand amp nuances on SOUTH perimeter\cf0 \
					[ 860,  \{	~waters[1].updateState( 20, 7, 9.5, 1.1, 2.9, 0.9, 0.2 ) \}], \cf2 // fire with electronic buzz\cf0 \
					[ 860,	\{	~pans[1].updateBehavior( 30, \cf4 \\jittery3\cf0 , (\cf4 \\speed\cf0 : 3, \cf4 \\freq\cf0 :0.05, \cf4 \\amount\cf0 : 0.35, \cf4 \\spread\cf0 : 0.01, \cf4 \\pos\cf0 : 0.5) ) \}], \cf2 // rand amp nuances on CRISTO perimeter\cf0 \
					[ 890,  \{	~waters[1].updateState( 20, 7, 9.5, 1.1, 2.9, 0.3, 3 ) \}], \cf2 // fire with electronic buzz\cf0 \
					[ 890,	\{	~pans[1].updateBehavior( 30, \cf4 \\jittery3\cf0 , (\cf4 \\speed\cf0 : 3, \cf4 \\freq\cf0 :0.05, \cf4 \\amount\cf0 : 0.35, \cf4 \\spread\cf0 : 0.8, \cf4 \\pos\cf0 : 0.2) ) \}], \cf2 // rand amp nuances on NORTH perimeter\cf0 \
					[ 900, \{ 	~\cf3 this\cf0 .prepareNext()  \} ],\
					[ 920,	\{	~pans[1].updateState( 30, \cf4 \\perim\cf0 , [0.5,0.5,3] ) \}], \cf2 // ALL the perimeter\cf0 \
					[ 921,  \{	~waters[1].updateState( 30, 7, 9.5, 1.1, 2.9, 0.6, 0.3 ) \}], \cf2 // fire with electronic buzz\cf0 \
					[ 1000, \{	~waters[1].updateState( 20, 7, 9.5, 1.1, 2.9, 0.3, 0.12 ) \}], \cf2 // fire with electronic buzz\cf0 \
					[ 1020, \{ 	~\cf3 this\cf0 .playNext()  \} ],\
					[ 1040, \{	~waters[1].updateState( 20, 7, 9.5, 1.1, 2.9, 0.3, 0.3 ) \}], \cf2 // fire with electronic buzz\cf0 \
					[ 1200,	\{	~waters[1].free \} ],\
					[ 1300, \{ 	~\cf3 this\cf0 .cleanup()  \} ]\
				]\
			\
			\cf2 //////////	ADD ~THIS.PREPARENEXT AND ~THIS.CLEANUP //////////\cf0 \
			];\
			\
			~finishedFlag = \cf3 false\cf0 ;\
			\
			\cf2 ////	MAKE SURE NUMBER OF COLLECTED SCORES CORRESPONDS TO THE NUMBER OF WINDS //////\cf0 \
			~waterTasks = 2.collect(\{ \cf3 | waterIndex |\cf0 \
				\cf3 var\cf0  thisClock;\
				thisClock = \cf3 TempoClock\cf0 .new;\
					\cf3 Task\cf0 (\{ \cf3 |starttime|\cf0 \
						\cf3 var\cf0  update, srcdex, now, offset, finished;\
						update = 2; \cf2 // update time for the task to check the score\cf0 \
						srcdex = 0;\
						now = 0.0;\
						offset = 0.0;\
						finished = \cf3 false\cf0 ;\
						\cf5 "checking water "\cf0 .post; waterIndex.post; \cf5 "'s "\cf0 .post; ~watersScore[ waterIndex ].size.post; \cf5 " breakpoints for offest"\cf0 .postln;\
						~watersScore[ waterIndex ].size.do(\{ \cf3 | i |\cf0 \
							(offset > ~watersScore[waterIndex][i][0]).if(\{ srcdex = srcdex + 1 \});\
						\});\
						\cf5 "water "\cf0 .post; waterIndex.post; \cf5 " is starting at breakpoint "\cf0 .post; srcdex.postln;\
\
						~waters[waterIndex].play;\
						1.wait;\
\
						block(\{ \cf3 | break |\cf0 \
							\cf3 inf\cf0 .do(\{ \
								\cf3 var\cf0  state;\
								now = \cf3 thisThread\cf0 .beats - starttime + offset;\
								\
								finished.not.if(\{\
									(now > ~watersScore[ waterIndex ][srcdex][0]).if(\{\
											state = ~watersScore[ waterIndex ][srcdex][1];\
											try\{ s.makeBundle(\cf3 nil\cf0 , state) \};\
											srcdex = srcdex + 1;\
											\cf5 "score "\cf0 .post; waterIndex.post; \cf5 " advancing to "\cf0 .post; srcdex.postln;\
											(srcdex == ~watersScore[ waterIndex ].size).if(\{\
												finished = \cf3 true\cf0 ;\
												~finishedFlag = \cf3 true\cf0 ;\
												\cf5 "this water's score is FINISHED: "\cf0 .post; waterIndex.postln;\
												break.value();\
											\});\
									\});\
								\});\
								update.wait;\
							\});\
						\});	\
					\}, thisClock);\
			\}); \
			\
			\cf5 "prepare complete for FLUX 3 - WATER"\cf0 .postln;\
		\}, ~prepClock);\
	\};\
	~prepTask.value.play;\
\
\};\
\
~play = \{\
\
	~pans.do( \cf3 _\cf0 .play );	\
	~waterTasks.do( \cf3 _\cf0 .play );\
\
\};\
\
~free = \{\
	~busses.do(\cf3 _\cf0 .free);\
	~pans.do(\cf3 _\cf0 .free);\
	~prepClock.clear;\
	~waterTasks.do(\{ \cf3 | task |\cf0  task.stop.reset; task.clock.clear\});\
	~finishedFlag.not.if(\{\
		\cf5 "finished early"\cf0 .postln;		\
		~waters.do(\{ \cf3 |water|\cf0  water.killNow \});\
		\cf2 //~voices.do(\{ |voice| voice.killNow \});\cf0 \
	\});\
	~busses = ~waters = ~voices = ~pans = ~prepTask = ~prepClock = ~waterTasks = ~watersScore = ~finishedFlag = \cf3 nil\cf0 ;\
	\
\};\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 MiroEnvironment\cf0 .get(\cf4 \\flujo3_agua\cf0 ).pop;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //MiroEnvironment.gui}