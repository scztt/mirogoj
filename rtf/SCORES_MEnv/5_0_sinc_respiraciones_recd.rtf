{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green0\blue0;\red0\green115\blue0;
\red96\green96\blue96;\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs22 \cf2 MiroEnvironment\cf3 .get(\cf4 \\sinc5_respiraciones_recd\cf3 ).push;\
\
~init = \{\
\
	~virtMeters = \cf2 VirtualSpeakerArray\cf3 .get.getBusNums;\
	\
	~bd = \cf2 BreathData\cf3 .new;\
	~spkrs = 12.collect(\{ \cf2 |i|\cf3  ~bd.clusterSpeakers(i) \});\
	~outClusterSpkrs = ~spkrs.collect(\{ \cf2 |cluster|\cf3  \
				\cf2 var\cf3  rtn = [];\
				cluster.do(\{ \cf2 |spkr|\cf3 \
					spkr.notNil.if(\{ rtn = rtn.add( ~virtMeters[spkr] ) \});\
				\});\
				rtn;\
			\});\
	\
	~playSynthD = \cf2 CtkNoteObject\cf3 (\
	\
		\cf2 SynthDef\cf3 ( \cf4 \\lemmehearit\cf3 , \{ \cf2 arg\cf3  out=0, dur = 247, buffer, amp = 1;\
			\cf2 var\cf3  env, src;\
			env = \cf2 EnvGen\cf3 .kr( \cf2 Env\cf3 ( [0,1,1,0],[0.5, dur, 0.5], \cf4 \\sin\cf3  ), levelScale: amp, doneAction: 2 );\
			src = \cf2 DiskIn\cf3 .ar( 12, buffer, 0 );\
			\cf2 Out\cf3 .ar( out, src * env );\
			\})\
		);\
\
	~routeSynthD = \cf2 CtkNoteObject\cf3 (\
	\
		\cf2 SynthDef\cf3 ( \cf4 \\routethismutha\cf3 , \{ \cf2 arg\cf3  in, out, dur = 247, buffer, amp = 1;\
			\cf2 var\cf3  env;\
			env = \cf2 EnvGen\cf3 .kr( \cf2 Env\cf3 ( [1,1],[dur+1.1], \cf4 \\sin\cf3  ), levelScale: amp, doneAction: 2 );\
			\cf2 Out\cf3 .ar( out, \cf2 In\cf3 .ar(in,1) );\
			\})\
		);\
	\
	\cf5 "SYNCHRONY 5 INITIALIZED - BREATHS"\cf3 .postln;\
\};\
\
~prepare = \{\
	\
	~finishedFlag = \cf2 false\cf3 ;\
	\
	~prepTask = \cf2 Task\cf3 (\{\
		\
		~routeBus = \cf2 CtkAudio\cf3 .new(12);\
		0.2.wait;\
		~sndBuf = \cf2 Buffer\cf3 .cueSoundFile(s, \cf5 "/Users/Shared/Breathing_12Chan_norm.aif"\cf3 , 0, 12, 32768*8);\
		1.5.wait;\
		~playSynth = ~playSynthD.new(addAction: \cf4 \\head\cf3 , target: \cf2 GroupManager\cf3 .get.synths).out_(~routeBus).buffer_(~sndBuf.bufnum);\
		0.5.wait;\
		~routerTeam = ~outClusterSpkrs.collect(\{ \cf2 |cluster, i|\cf3 \
			cluster.collect(\{ \cf2 |spk|\cf3  ~routeSynthD.new(addAction: \cf4 \\after\cf3 , target: ~playSynth)\
								.in_(~routeBus.bus+i).out_(spk) \})\
		\}).flatten;\
		2.wait;\
		\cf5 "prepsequece through"\cf3 .postln;\
	\});\
	\
	~prepTask.play;\
	~nextPrepared = \cf2 false\cf3 ;\
	~playTask = \
		\cf2 Task\cf3 (\{ \cf2 |starttime|\cf3 \
			\cf2 var\cf3  now, update, totalDur, prepTime;\
			update = 2;\
			totalDur = 250;\
			prepTime = 220;\
			~playSynth.play;\
			0.2.wait;\
			~routerTeam.do(\cf2 _\cf3 .play);\
			block(\{ \cf2 |break|\cf3 \
				\cf2 inf\cf3 .do(\{\
					now = \cf2 thisThread\cf3 .beats - starttime;\
\
					((now > prepTime) && ~nextPrepared.not).if(\{\
						~\cf2 this\cf3 .prepareNext();\
						~nextPrepared = \cf2 true\cf3 ;\
					\});\
					(now > totalDur).if(\{\
							\cf5 "SYNCHRONY ENDING - BREATHS"\cf3 .postln;\
							~finishedFlag = \cf2 true\cf3 ;\
							~\cf2 this\cf3 .playNext();\
							~\cf2 this\cf3 .cleanUp;\
							break.value();\
							\});\
					update.wait;\
				\})\
			\})\
		\});\
\
	\cf5 "SYNCHRONY 5 PREPARED - BREATHS"\cf3 .postln;\
\
\};\
\
~play = \{\
\
	~playTask.play;\
\
	\cf5 "SYNCHRONY 5 PLAYING - BREATHS"\cf3 .postln;\
	\
	\};\
\
~free = \{\
	\
	~finishedFlag.not.if(\{\
		\cf5 "killed early"\cf3 .postln;\
		~routerTeam.do(\cf2 _\cf3 .free);\
		~playSynth.free;\
		\});\
	~sndBuf.close;\
	~sndBuf.free;\
	~routeBus.free;\
	~playTask.stop.reset; ~playTask.clock.clear;\
	~prepTask.stop.reset; ~prepTask.clock.clear;\
	~prepTask = ~playTask = ~finishedFlag = ~routerTeam = ~playSynth = ~routebus = ~nextPrepared = \cf2 nil\cf3 ;\
\
	\cf5 "SYNCHRONY 5 FREEING - BREATHS"\cf3 .postln;\
	\
\};\
\
\cf2 MiroEnvironment\cf3 .get(\cf4 \\sinc5_respiraciones_recd\cf3 ).pop;\
\cf6 //MiroEnvironment.gui}