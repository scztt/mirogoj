{\rtf1\ansi\ansicpg1252\cocoartf1038
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red0\green115\blue0;\red96\green96\blue96;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs22 \cf2 MiroEnvironment\cf0 .get(\cf3 \\sinc5_respiraciones\cf0 ).push;\
\
~init = \{\
	\cf2 SynthDef\cf0 ( \cf3 \\lemmehearit\cf0 , \{ \cf2 arg\cf0  out=0, dur = 247, buffer, amp = 1;\
		\cf2 var\cf0  env, src;\
		env = \cf2 EnvGen\cf0 .kr( \cf2 Env\cf0 ( [0,1,1,0],[0.5, dur, 0.5], \cf3 \\sin\cf0  ), levelScale: amp, doneAction: 2 );\
		src = V\cf2 DiskIn\cf0 .ar( 12, buffer, BufRateScale.kr(buffer), 0 );\
		\cf2 Out\cf0 .ar( out, src * env );\
		\}).send(s).store;\
	\cf2 SynthDef\cf0 ( \cf3 \\routethismutha\cf0 , \{ \cf2 arg\cf0  in, out, dur = 247, buffer, amp = 1;\
		\cf2 var\cf0  env;\
		env = \cf2 EnvGen\cf0 .kr( \cf2 Env\cf0 ( [1,1],[dur+1.1], \cf3 \\sin\cf0  ), levelScale: amp, doneAction: 2 );\
		\cf2 Out\cf0 .ar( out, \cf2 In\cf0 .ar(in,1) );\
		\}).send(s).store;\
\
	~virtMeters = \cf2 VirtualSpeakerArray\cf0 .get.getBusNums;\
	\
	~bd = \cf2 BreathData\cf0 .new;\
	~spkrs = 12.collect(\{ \cf2 |i|\cf0  ~bd.clusterSpeakers(i) \});\
	~outClusterSpkrs = ~spkrs.collect(\{ \cf2 |cluster|\cf0  \
				\cf2 var\cf0  rtn = [];\
				cluster.do(\{ \cf2 |spkr|\cf0 \
					spkr.notNil.if(\{ rtn = rtn.add( ~virtMeters[spkr] ) \});\
				\});\
				rtn;\
			\});\
	\
	~playSynthD = \cf2 CtkNoteObject\cf0 (\
	\
		\cf2 SynthDef\cf0 ( \cf3 \\lemmehearit\cf0 , \{ \cf2 arg\cf0  out=0, dur = 247, buffer, amp = 1;\
			\cf2 var\cf0  env, src;\
			env = \cf2 EnvGen\cf0 .kr( \cf2 Env\cf0 ( [0,1,1,0],[0.5, dur, 0.5], \cf3 \\sin\cf0  ), levelScale: amp, doneAction: 2 );\
			src = V\cf2 DiskIn\cf0 .ar( 12, buffer, BufRateScale.kr(buffer), 0 );\
			\cf2 Out\cf0 .ar( out, src * env );\
			\}).send(s).store\
		);\
\
	~routeSynthD = \cf2 CtkNoteObject\cf0 (\
	\
		\cf2 SynthDef\cf0 ( \cf3 \\routethismutha\cf0 , \{ \cf2 arg\cf0  in, out, dur = 247, buffer, amp = 1;\
			\cf2 var\cf0  env;\
			env = \cf2 EnvGen\cf0 .kr( \cf2 Env\cf0 ( [1,1],[dur+1.1], \cf3 \\sin\cf0  ), levelScale: amp, doneAction: 2 );\
			\cf2 Out\cf0 .ar( out, \cf2 In\cf0 .ar(in,1) );\
			\}).send(s).store;\
		);\
	\
	\cf4 "SYNCHRONY 5 INITIALIZED - BREATHS"\cf0 .postln;\
\};\
\
~prepare = \{\
	\
	~finishedFlag = \cf2 false\cf0 ;\
	\
	~prepTask = \cf2 Task\cf0 (\{\
		\
		~routeBus = \cf2 CtkAudio\cf0 .new(12);\
		0.2.wait;\
		~sndBuf = \cf2 Buffer\cf0 .cueSoundFile(s, \cf4 "/Users/Shared/Breathing_12Chan_norm.aif"\cf0 , 0, 12, 32768*8);\
		1.5.wait;\
		~playSynth = ~playSynthD.new(addAction: \cf3 \\head\cf0 , target: \cf2 GroupManager\cf0 .get.synths).out_(~routeBus).buffer_(~sndBuf.bufnum);\
		0.5.wait;\
		~routerTeam = ~outClusterSpkrs.collect(\{ \cf2 |cluster, i|\cf0 \
			cluster.collect(\{ \cf2 |spk|\cf0  ~routeSynthD.new(addAction: \cf3 \\after\cf0 , target: ~playSynth)\
								.in_(~routeBus.bus+i).out_(spk) \})\
		\}).flatten;\
		2.wait;\
		\cf4 "prepsequece through"\cf0 .postln;\
	\});\
	\
	~prepTask.play;\
	~nextPrepared = \cf2 false\cf0 ;\
	~playTask = \
		\cf2 Task\cf0 (\{ \cf2 |starttime|\cf0 \
			\cf2 var\cf0  now, update, totalDur, prepTime;\
			update = 2;\
			totalDur = 250;\
			prepTime = 220;\
			~playSynth.play;\
			0.2.wait;\
			~routerTeam.do(\cf2 _\cf0 .play);\
			block(\{ \cf2 |break|\cf0 \
				\cf2 inf\cf0 .do(\{\
					now = \cf2 thisThread\cf0 .beats - starttime;\
\
					((now > prepTime) && ~nextPrepared.not).if(\{\
						~\cf2 this\cf0 .prepareNext();\
						~nextPrepared = \cf2 true\cf0 ;\
					\});\
					(now > totalDur).if(\{\
							\cf4 "SYNCHRONY ENDING - BREATHS"\cf0 .postln;\
							~finishedFlag = \cf2 true\cf0 ;\
							~\cf2 this\cf0 .playNext();\
							~\cf2 this\cf0 .cleanup;\
							break.value();\
							\});\
					update.wait;\
				\})\
			\})\
		\});\
\
	\cf4 "SYNCHRONY 5 PREPARED - BREATHS"\cf0 .postln;\
\
\};\
\
~play = \{\
\
	~playTask.play;\
\
	\cf4 "SYNCHRONY 5 PLAYING - BREATHS"\cf0 .postln;\
	\
	\};\
\
~free = \{\
	\
	~finishedFlag.not.if(\{\
		\cf4 "killed early"\cf0 .postln;\
		~routerTeam.do(\cf2 _\cf0 .free);\
		~playSynth.free;\
		\});\
	~sndBuf.close;\
	~sndBuf.free;\
	~routeBus.free;\
	~playTask.stop.reset; ~playTask.clock.clear;\
	~prepTask.stop.reset; ~prepTask.clock.clear;\
	~prepTask = ~playTask = ~finishedFlag = ~routerTeam = ~playSynth = ~routebus = ~nextPrepared = \cf2 nil\cf0 ;\
\
	\cf4 "SYNCHRONY 5 FREEING - BREATHS"\cf0 .postln;\
	\
\};\
\
\cf2 MiroEnvironment\cf0 .get(\cf3 \\sinc5_respiraciones\cf0 ).pop;\
\cf5 //MiroEnvironment.gui}