{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs22 \cf2 ///// 4 MONO CODA FILES TO BE TRIPLICATED\cf3 \
\
\cf4 MiroEnvironment\cf3 .get(\cf5 \\coda_elementos\cf3 ).push;\
\
~init = \{\
\
	~clusterGroups = [\
		[0,1,3],\
		[2,4,5],\
		[6,9,10],\
		[7,8,11]\
	];\
	\
	~bd = \cf4 BreathData\cf3 .new;\
	~virtArr = \cf4 VirtualSpeakerArray\cf3 .get.getBusNums;\
		\cf2 // all the speakers in 4 groups, one group per element\cf3 \
	~elementSpkrs = ~clusterGroups.collect(\{ \cf4 |groups|\cf3 \
		groups.collect(\{ \cf4 |cluster|\cf3  \
			\cf4 var\cf3  tempColl=[];\
			~bd.clusterSpeakers(cluster).do(\{ \cf4 |spkr|\cf3  \
				spkr.notNil.if(\{ tempColl=tempColl.add(spkr) \})\
			\});\
			tempColl.collect(\{ \cf4 |spkr|\cf3  ~virtArr[spkr] \});\
		\}).flatten;\
	\});\
	\
\
	\cf4 SynthDef\cf3 ( \cf5 \\Mono4ChanPlayer\cf3 , \{\
		\cf4 | amp, dur |\cf3 \
		\cf4 var\cf3  env, envGen, buffers, signals;	\
		buffers = \cf4 Control\cf3 .names([\cf5 \\buffers\cf3 ]).kr( 0!4 );\
		env = Env([0.00001, 1, 1, 0.000001], [0.05, 0.75, 0.2],[2,0,-3]); \cf2 //Control.names([\\env]).kr( Env(1!12, [1]++(0!10)) );\cf3 \
		envGen = \cf4 EnvGen\cf3 .kr( env, timeScale:dur, levelScale:amp, doneAction:2 );\
		signals = \cf4 DiskIn\cf3 .ar( 1, buffers, 0 ) * envGen;\
		signals.do(\{\
			\cf4 |sig, i|\cf3 \
			\cf4 Out\cf3 .ar( ~elementSpkrs[i], sig );\
		\});\
	\}).send(s).store;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs18 \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs22 \cf3 	\cf6 "SYNCHRONY INITIALIZED - CODA"\cf3 .postln;\
\};\
\
~prepare = \{\
\
	~buffers = [\
			\cf4 Buffer\cf3 .cueSoundFile(s, \cf6 "/Users/Shared/Agua.wav"\cf3 , 0, 1),\
			\cf4 Buffer\cf3 .cueSoundFile(s,\cf6 "/Users/Shared/Fuego.wav"\cf3  , 0, 1),\
			\cf4 Buffer\cf3 .cueSoundFile(s, \cf6 "/Users/Shared/Tierra.wav"\cf3 , 0, 1),\
			\cf4 Buffer\cf3 .cueSoundFile(s, \cf6 "/Users/Shared/Aire.wav"\cf3 , 0, 1)\
		];\
			\
	~playClock = \cf4 TempoClock\cf3 .new;\
	~playTask = \
		\cf4 Task\cf3 (\{ \cf4 |starttime|\cf3 \
			\cf4 var\cf3  totalDur;\
			totalDur = 6.1*60;\
			\
			~synth = \cf4 Synth\cf3 ( \cf5 \\Mono4ChanPlayer\cf3 ,\
				args:[\cf5 \\amp\cf3 , 1, \cf5 \\dur\cf3 , 6*60, \cf5 \\buffers\cf3 , ~buffers.collect(\{ \cf4 |buf|\cf3  buf.bufnum \})],\
				target:\cf4 GroupManager\cf3 .get.synths );\
\
			2.wait;\
			block(\{ \cf4 |break|\cf3 \
				\cf4 inf\cf3 .do(\{\
					\cf4 var\cf3  now;\
					now = \cf4 thisThread\cf3 .beats - starttime;\
					\
					(now > totalDur).if(\{\
						\cf6 "CODA ENDING"\cf3 .postln;\
						~\cf4 this\cf3 .cleanUp;\
						break.value();\
						\});\
					5.wait;\
				\});\
			\});\
		\}, ~playClock);\
\
	\cf6 "SYNCHRONY PREPARED - CODA"\cf3 .postln;\
\};\
\
~play = \{\
\
	~playTask.play;\
	\cf6 "SYNCHRONY PLAYING - CODA"\cf3 .postln;\
\
\};\
\
~free = \{\
	~synth.free;\
	~playClock.clear;\
	~buffers.do(\{ \cf4 |buf|\cf3  buf.close \});\
	~buffers.do(\{ \cf4 |buf|\cf3  buf.free \});\
	~buffers = ~playTask = ~playClock = ~synth = \cf4 nil\cf3 ;\
	\cf6 "SYNCHRONY FREEING - CODA"\cf3 .postln;\
\};\
\
\cf4 MiroEnvironment\cf3 .get(\cf5 \\coda_elementos\cf3 ).pop;\
\cf2 //MiroEnvironment.gui;}