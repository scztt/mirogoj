{\rtf1\ansi\ansicpg1252\cocoartf1138
{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fnil\fcharset0 BitstreamVeraSans-Roman;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;\red128\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs22 \cf2 ///// 4 MONO CODA FILES TO BE TRIPLICATED\cf0 \
\
\cf3 MiroEnvironment\cf0 .get(\cf4 \\coda_elementos\cf0 ).push;\
\
~init = \{\
\
	~clusterGroups = [\
		[0,1,3],\
		[2,4,5],\
		[6,9,10],\
		[7,8,11]\
	];\
	\
	~bd = \cf3 BreathData\cf0 .new;\
	~virtArr = \cf3 VirtualSpeakerArray\cf0 .get.getBusNums;\
		\cf2 // all the speakers in 4 groups, one group per element\cf0 \
	~elementSpkrs = ~clusterGroups.collect(\{ \cf3 |groups|\cf0 \
		groups.collect(\{ \cf3 |cluster|\cf0  \
			\cf3 var\cf0  tempColl=[];\
			~bd.clusterSpeakers(cluster).do(\{ \cf3 |spkr|\cf0  \
				spkr.notNil.if(\{ tempColl=tempColl.add(spkr) \})\
			\});\
			tempColl.collect(\{ \cf3 |spkr|\cf0  ~virtArr[spkr] \});\
		\}).flatten;\
	\});\
	\
\
	\cf3 SynthDef\cf0 ( \cf4 \\Mono4ChanPlayer\cf0 , \{\
		\cf3 | amp, dur |\cf0 \
		\cf3 var\cf0  env, envGen, buffers, signals;	\
		buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!4 );\
		env = Env([0.00001, 1, 1, 0.000001], [0.05, 0.75, 0.2],[2,0,-3]); \cf2 //Control.names([\\env]).kr( Env(1!12, [1]++(0!10)) );\cf0 \
		envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:dur, levelScale:amp, doneAction:2 );\
		signals = \cf3 DiskIn\cf0 .ar( 1, buffers, 0 ) * envGen;\
		signals.do(\{\
			\cf3 |sig, i|\cf0 \
			\cf3 Out\cf0 .ar( ~elementSpkrs[i], sig );\
		\});\
	\}).send(s).store;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\fs22 \cf0 	\cf5 "SYNCHRONY INITIALIZED - CODA"\cf0 .
\f1\fs24 log(\cf6 \\
\f2 \cf4 miroStatus, 1
\f1 \cf0 )
\f0\fs22 ;\
\};\
\
~prepare = \{\
\
	~buffers = [\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/Agua.wav"\cf0 , 0, 1),\
			\cf3 Buffer\cf0 .cueSoundFile(s,\cf5 "/Users/Shared/Fuego.wav"\cf0  , 0, 1),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/Tierra.wav"\cf0 , 0, 1),\
			\cf3 Buffer\cf0 .cueSoundFile(s, \cf5 "/Users/Shared/Aire.wav"\cf0 , 0, 1)\
		];\
			\
	~playClock = \cf3 TempoClock\cf0 .new;\
	~playTask = \
		\cf3 Task\cf0 (\{ \cf3 |starttime|\cf0 \
			\cf3 var\cf0  totalDur;\
			totalDur = 6.1*60;\
			\
			~synth = \cf3 Synth\cf0 ( \cf4 \\Mono4ChanPlayer\cf0 ,\
				args:[\cf4 \\amp\cf0 , 1, \cf4 \\dur\cf0 , 6*60, \cf4 \\buffers\cf0 , ~buffers.collect(\{ \cf3 |buf|\cf0  buf.bufnum \})],\
				target:\cf3 GroupManager\cf0 .get.synths );\
\
			2.wait;\
			block(\{ \cf3 |break|\cf0 \
				\cf3 inf\cf0 .do(\{\
					\cf3 var\cf0  now;\
					now = \cf3 thisThread\cf0 .beats - starttime;\
					\
					(now > totalDur).if(\{\
						\cf5 "CODA ENDING"\cf0 .
\f1\fs24 log(\cf6 \\
\f2 \cf4 miroStatus, 1
\f1 \cf0 )
\f0\fs22 ;\
						~\cf3 this\cf0 .cleanUp;\
						break.value();\
						\});\
					5.wait;\
				\});\
			\});\
		\}, ~playClock);\
\
	\cf5 "SYNCHRONY PREPARED - CODA"\cf0 .
\f1\fs24 log(\cf6 \\
\f2 \cf4 miroStatus, 1
\f1 \cf0 )
\f0\fs22 ;\
\};\
\
~play = \{\
\
	~playTask.play;\
	\cf5 "SYNCHRONY PLAYING - CODA"\cf0 .
\f1\fs24 log(\cf6 \\
\f2 \cf4 miroStatus, 1
\f1 \cf0 )
\f0\fs22 ;\
\
\};\
\
~free = \{\
	~synth.free;\
	~playClock.clear;\
	~buffers.do(\{ \cf3 |buf|\cf0  buf.close \});\
	~buffers.do(\{ \cf3 |buf|\cf0  buf.free \});\
	~buffers = ~playTask = ~playClock = ~synth = \cf3 nil\cf0 ;\
	\cf5 "SYNCHRONY FREEING - CODA"\cf0 .
\f1\fs24 log(\cf6 \\
\f2 \cf4 miroStatus, 1
\f1 \cf0 )
\f0\fs22 ;\
\};\
\
\cf3 MiroEnvironment\cf0 .get(\cf4 \\coda_elementos\cf0 ).pop;\
\cf2 //MiroEnvironment.gui;}