{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 // South Server buffer players\cf0 \
\
(\
\cf3 var\cf0  leftChannels, rightChannels;\
\cf3 var\cf0  vg = \cf3 VirtualSpeakerArray\cf0 .get.groupings;\
\cf3 var\cf0  buffer;\
\
leftChannels = [\
\cf2 //	vg[0].atAll([0,2]),\cf0 \
\cf2 //	vg[1].atAll([0,2]),\cf0 \
\cf2 //	vg[2].atAll([0,2]),\cf0 \
\
\cf2 //	vg[3].atAll([0]),\cf0 \
\cf2 //	vg[4].atAll([0,2]),\cf0 \
\cf2 //	vg[5].atAll([0])\cf0 \
	\
	vg[6].atAll([0,2]),\
	vg[7].atAll([0,2]),\
	vg[8].atAll([0]),\
	\
	vg[9].atAll([0,2]),\
	vg[10].atAll([0,2]),\
	vg[11].atAll([0,2])\
];\
rightChannels = [\
\cf2 //	vg[0].atAll([1,3]),\cf0 \
\cf2 //	vg[1].atAll([1,3]),\cf0 \
\cf2 //	vg[2].atAll([1,3]),\cf0 \
	\
\cf2 //	vg[3].atAll([1,2]),\cf0 \
\cf2 //	vg[4].atAll([1,3]),\cf0 \
\cf2 //	vg[5].atAll([0])\cf0 \
	\
	vg[6].atAll([1]),\
	vg[7].atAll([1,3]),\
	vg[8].atAll([0]),\
	\
	vg[9].atAll([1,3]),\
	vg[10].atAll([1,3]),\
	vg[11].atAll([1,3])\
];\
	\
rightChannels = rightChannels.collect( \cf3 _\cf0 .collect( \cf3 _\cf0 .busNum ) ).postln;\
leftChannels = leftChannels.collect( \cf3 _\cf0 .collect( \cf3 _\cf0 .busNum ) ).postln;\
[rightChannels,leftChannels].flatten.flatten.flatten.sort.postln;\
\
\cf2 // Streaming 12 stereo buffers from disk\cf0 \
\cf3 SynthDef\cf0 ( \cf4 \\Stereo12ChanDiskPlayerNorth\cf0 , \{\
	\cf3 | amp=1, dur=20 |\cf0 \
	\cf3 var\cf0  env, envGen, buffers, signals;	\
	SeedMaster.ugen;\
	buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!6 );\
	env = \cf3 Control\cf0 .names([\cf4 \\env\cf0 ]).kr( \cf3 Env\cf0 (1!12, [1]++(0!10)) );\
	envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:dur, levelScale:amp, doneAction:2 );\
	signals = \cf3 DiskIn\cf0 .ar( 2, buffers ) * envGen;\
	signals[5] = signals[5]*0.5;\
	signals[8] = signals[8]*0.5;\
	signals.do(\{\
		\cf3 |sig, i|\cf0 \
		\cf3 Out\cf0 .ar( rightChannels[i], sig[0] );\
		\cf3 Out\cf0 .ar( leftChannels[i], sig[1] );\
	\});\
\}).send(s).store;\
\
\cf2 // Playing 12 stereo buffers from memory\cf0 \
\cf3 SynthDef\cf0 ( \cf4 \\Stereo12ChanPlayer\cf0 , \{\
	\cf3 | amp=1, dur=20 |\cf0 \
	\cf3 var\cf0  env, envGen, buffers, signals;	\
	SeedMaster.ugen;\
	buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!6 );\
	env = \cf3 Control\cf0 .names([\cf4 \\env\cf0 ]).kr( \cf3 Env\cf0 (1!12, [1]++(0!10)) );\
	envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:dur, levelScale:amp, doneAction:2 );\
	signals = \cf3 PlayBuf\cf0 .ar( 2, buffers ) * envGen;\
	signals[5] = signals[5]*0.5;\
	signals[8] = signals[8]*0.5;\
	signals.do(\{\
		\cf3 |sig, i|\cf0 \
		\cf3 Out\cf0 .ar( rightChannels[i], sig[0] );\
		\cf3 Out\cf0 .ar( leftChannels[i], sig[1] );\
	\});\
\}).send(s).store;\
\
\cf2 //Streaming  \cf0 \
\cf2 /*\
SynthDef( \\Stereo12ChanDiskPlayer, \{\
	| amp, dur=20 |\
	var env, envGen, buffers, signals;	\
	\cf0 SeedMaster.ugen;\cf2 \
	buffers = Control.names([\\buffers]).kr( 0!12 );\
	env = Control.names([\\env]).kr( Env(1!12, [1]++(0!10)) );\
	envGen = EnvGen.kr( env, timeScale:dur, levelScale:amp, doneAction:2 );\
	signals = DiskIn.ar( 2, buffers ) * envGen;\
	signals[5] = signals[5]*0.5;\
	signals[8] = signals[8]*0.5;\
	signals.do(\{\
		|sig, i|\
		Out.ar( rightChannels[i], sig[0] );\
		Out.ar( leftChannels[i], sig[1] );\
	\});\
\}).send(s).store;\
*/\cf0 \
\
\cf2 // Streams 12 mono channels from disk\cf0 \
\cf3 SynthDef\cf0 ( \cf4 \\Mono12ChanDiskPlayer\cf0 , \{\
	\cf3 | amp, dur |\cf0 \
	\cf3 var\cf0  env, envGen, buffers, signals;	\
	SeedMaster.ugen;\
	buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!6 );\
	env = \cf3 Control\cf0 .names([\cf4 \\env\cf0 ]).kr( \cf3 Env\cf0 (1!12, [1]++(0!10)) );\
	envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:20, levelScale:amp );\
	signals = \cf3 DiskIn\cf0 .ar( 1, buffers ) * envGen;\
	signals.do(\{\
		\cf3 |sig, i|\cf0 \
		\cf3 Out\cf0 .ar( rightChannels[i] ++ leftChannels[i], sig );\
	\});\
\}).send(s).store;\
\
\cf2 // Plays 12 mono channels from memory\cf0 \
\cf3 SynthDef\cf0 ( \cf4 \\Mono12ChanPlayer\cf0 , \{\
	\cf3 | amp, dur |\cf0 \
	\cf3 var\cf0  env, envGen, buffers, signals;	\
	SeedMaster.ugen;\
	buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!6 );\
	env = \cf3 Control\cf0 .names([\cf4 \\env\cf0 ]).kr( \cf3 Env\cf0 (1!12, [1]++(0!10)) );\
	envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:20, levelScale:amp );\
	signals = \cf3 PlayBuf\cf0 .ar( 1, buffers ) * envGen;\
	signals.do(\{\
		\cf3 |sig, i|\cf0 \
		\cf3 Out\cf0 .ar( rightChannels[i] ++ leftChannels[i], sig );\
	\});\
\}).send(s).store;\
\
\cf2 // Don't use little speakers\cf0 \
rightChannels.removeAt(5);\
rightChannels.removeAt(8);\
leftChannels.removeAt(5);\
leftChannels.removeAt(8);\
\
\cf2 // 10 Stereo chans, from disk\cf0 \
\cf3 SynthDef\cf0 ( \cf4 \\Stereo10ChanDiskPlayer\cf0 , \{\
	\cf3 | amp, dur=20 |\cf0 \
	\cf3 var\cf0  env, envGen, buffers, signals;	\
	SeedMaster.ugen;\
	buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!5 );\
	env = \cf3 Control\cf0 .names([\cf4 \\env\cf0 ]).kr( \cf3 Env\cf0 (1!12, [1]++(0!10)) );\
	envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:dur, levelScale:amp, doneAction:2 );\
	signals = \cf3 DiskIn\cf0 .ar( 2, buffers ) * envGen;\
	signals.do(\{\
		\cf3 |sig, i|\cf0 \
		\cf3 Out\cf0 .ar( rightChannels[i], sig[0] );\
		\cf3 Out\cf0 .ar( leftChannels[i], sig[1] );\
	\});\
\}).send(s).store;\
\
\cf2 // 10 Stereo chans, from memory\cf0 \
\cf3 SynthDef\cf0 ( \cf4 \\Stereo10ChanDiskPlayer\cf0 , \{\
	\cf3 | amp, dur=20 |\cf0 \
	\cf3 var\cf0  env, envGen, buffers, signals;\
	SeedMaster.ugen;	\
	buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!5 );\
	env = \cf3 Control\cf0 .names([\cf4 \\env\cf0 ]).kr( \cf3 Env\cf0 (1!12, [1]++(0!10)) );\
	envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:dur, levelScale:amp, doneAction:2 );\
	signals = \cf3 PlayBuf\cf0 .ar( 2, buffers ) * envGen;\
	signals.do(\{\
		\cf3 |sig, i|\cf0 \
		\cf3 Out\cf0 .ar( rightChannels[i], sig[0] );\
		\cf3 Out\cf0 .ar( leftChannels[i], sig[1] );\
	\});\
\}).send(s).store;\
\
\cf2 // 10 Mono chans from disk\cf0 \
\cf3 SynthDef\cf0 ( \cf4 \\Mono10ChanDiskPlayer\cf0 , \{\
	\cf3 | amp, dur, envelope |\cf0 \
	\cf3 var\cf0  env, envGen, buffers, signals;	\
	SeedMaster.ugen;\
	buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!5 );\
	env = \cf3 Control\cf0 .names([\cf4 \\env\cf0 ]).kr( \cf3 Env\cf0 (1!12, [1]++(0!10)) );\
	envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:20, levelScale:amp );\
	signals = \cf3 DiskIn\cf0 .ar( 1, buffers ) * envGen;\
	signals.do(\{\
		\cf3 |sig, i|\cf0 \
		\cf3 Out\cf0 .ar( rightChannels[i] ++ leftChannels[i], sig );\
	\});\
\}).send(s).store;\
\
\cf2 // 10 Mono chans from memory\cf0 \
\cf3 SynthDef\cf0 ( \cf4 \\Mono10ChanDiskPlayer\cf0 , \{\
	\cf3 | amp, dur, envelope |\cf0 \
	\cf3 var\cf0  env, envGen, buffers, signals;	\
	SeedMaster.ugen;\
	buffers = \cf3 Control\cf0 .names([\cf4 \\buffers\cf0 ]).kr( 0!5 );\
	env = \cf3 Control\cf0 .names([\cf4 \\env\cf0 ]).kr( \cf3 Env\cf0 (1!12, [1]++(0!10)) );\
	envGen = \cf3 EnvGen\cf0 .kr( env, timeScale:20, levelScale:amp );\
	signals = \cf3 PlayBuf\cf0 .ar( 1, buffers ) * envGen;\
	signals.do(\{\
		\cf3 |sig, i|\cf0 \
		\cf3 Out\cf0 .ar( rightChannels[i] ++ leftChannels[i], sig );\
	\});\
\}).send(s).store;\
\
}